<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>yyc`s Blog on yyc`s Blog</title>
    <link>https://caxavault.online/</link>
    <description>Recent content in yyc`s Blog on yyc`s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 19 Nov 2019 15:04:27 +0800</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>rclone挂载google driver到vps</title>
      <link>https://caxavault.online/2019/012/</link>
      <pubDate>Tue, 19 Nov 2019 15:04:27 +0800</pubDate>
      
      <guid>https://caxavault.online/2019/012/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;code&gt;rclone&lt;/code&gt;可以帮助我们在&lt;code&gt;Linux&lt;/code&gt;上挂载一些储存服务，包括&lt;code&gt;google driver&lt;/code&gt;、&lt;code&gt;one driver&lt;/code&gt;、&lt;code&gt;aws s3&lt;/code&gt;等等，同时不会占用硬盘空间。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;安装依赖&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;apt-get install fuse
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;下载&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://downloads.rclone.org/v1.50.1/rclone-v1.50.1-linux-amd64.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;截止目前最新版为&lt;code&gt;1.50.1&lt;/code&gt;，在 &lt;a href=&#34;https://downloads.rclone.org/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;可以看到历史版本。
下载解压后里面的可执行文件&lt;code&gt;rclone&lt;/code&gt;就是我们需要的，可以直接在当前目录使用也可以将其拷贝到&lt;code&gt;/usr/bin&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;配置&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rclone config
n -&amp;gt; 输入name(例如google) -&amp;gt; 选择挂载盘类型(例如13) -&amp;gt; 一路默认 -&amp;gt; 链接从浏览器打开，获取verification code
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;挂载&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 先新建一个目录,用于挂载
mkdir -p /mnt/google
# 挂载命令
rclone mount google: /mnt/google --allow-other --allow-non-empty --vfs-cache-mode writes --deamon
# 查看已挂载的目录
df -h
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;rclone&lt;/code&gt;设置&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rclone config - 进入交互式配置选项，进行添加、删除、管理网盘等操作。
rclone config file - 显示配置文件的路径，一般配置文件在 ~/.config/rclone/rclone.conf
rclone config show - 显示配置文件信息
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;rclone&lt;/code&gt;用法示例&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rclone move -v /Download google:/Download --transfers=1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;rclone&lt;/code&gt;命令语法&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 本地到网盘
rclone [功能选项] &amp;lt;本地路径&amp;gt; &amp;lt;网盘名称:路径&amp;gt; [参数] [参数] ...
# 网盘到本地
rclone [功能选项] &amp;lt;网盘名称:路径&amp;gt; &amp;lt;本地路径&amp;gt; [参数] [参数] ...
# 网盘到网盘
rclone [功能选项] &amp;lt;网盘名称:路径&amp;gt; &amp;lt;网盘名称:路径&amp;gt; [参数] [参数] ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;rclone&lt;/code&gt;命令&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rclone copy - 复制
rclone move - 移动，如果要在移动后删除空源目录，请加上 --delete-empty-src-dirs 参数
rclone sync - 同步：将源目录同步到目标目录，只更改目标目录。
rclone delete - 删除路径下的文件内容。
rclone purge - 删除路径及其所有文件内容。
rclone mkdir - 创建目录。
rclone rmdir - 删除目录。
rclone rmdirs - 删除指定灵境下的空目录。如果加上 --leave-root 参数，则不会删除根目录。
rclone check - 检查源和目的地址数据是否匹配。
rclone ls - 列出指定路径下的所有的文件以及文件大小和路径。
rclone lsl - 比上面多一个显示上传时间。
rclone lsd 列出指定路径下的目录
rclone lsf - 列出指定路径下的目录和文件
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;rclone&lt;/code&gt;常用参数&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-n = --dry-run - 测试运行，用来查看 rclone 在实际运行中会进行哪些操作。
-P = --progress - 显示实时传输进度。
--cache-chunk-size SizeSuffi - 块的大小，默认 5M，理论上是越大上传速度越快，同时占用内存也越多。如果设置得太大，可能会导致进程中断。
--cache-chunk-total-size SizeSuffix - 块可以在本地磁盘上占用的总大小，默认 10G。
--transfers=N - 并行文件数，默认为 4。在比较小的内存的 VPS 上建议调小这个参数，比如 128M 的小鸡上使用建议设置为 1。
--config string - 指定配置文件路径，string 为配置文件路径。比如在使用宝塔面板输入命令操作时可能会遇到找不到配置文件的问题，这时就需要指定配置文件路径。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;&lt;code&gt;rclone&lt;/code&gt;日志&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rclone&lt;/code&gt; 有 4 个级别的日志记录，&lt;code&gt;ERROR&lt;/code&gt;，&lt;code&gt;NOTICE&lt;/code&gt;，&lt;code&gt;INFO&lt;/code&gt; 和 &lt;code&gt;DEBUG&lt;/code&gt;。默认情况下，&lt;code&gt;rclone&lt;/code&gt; 将生成 &lt;code&gt;ERROR&lt;/code&gt; 和 &lt;code&gt;NOTICE&lt;/code&gt; 级别消息。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;-q rclone 将仅生成 ERROR 消息。
-v rclone 将生成 ERROR，NOTICE 和 INFO 消息，推荐此项。
-vv rclone 将生成 ERROR，NOTICE，INFO 和 DEBUG 消息。
--log-level LEVEL 标志控制日志级别。
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Vim配置</title>
      <link>https://caxavault.online/2019/011/</link>
      <pubDate>Fri, 15 Nov 2019 16:16:34 +0800</pubDate>
      
      <guid>https://caxavault.online/2019/011/</guid>
      <description>

&lt;h3 id=&#34;安装vim-plug&#34;&gt;安装Vim-Plug:&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;在-vimrc-中配置插件&#34;&gt;在&lt;code&gt;~/.vimrc&lt;/code&gt;中配置插件：&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;call plug#begin(&#39;~/.vim/plugged&#39;)
	Plug &#39;vim-airline/vim-airline&#39;
	Plug &#39;scrooloose/nerdtree&#39;
	Plug &#39;flazz/vim-colorschemes&#39;
	Plug &#39;fatih/vim-go&#39;, { &#39;do&#39;: &#39;:GoUpdateBinaries&#39; }
	Plug &#39;Raimondi/delimitMate&#39;
call plug#end()

colorscheme molokai
map &amp;lt;F2&amp;gt; :NERDTreeToggle&amp;lt;CR&amp;gt;
map &amp;lt;F3&amp;gt; :NERDTreeFind&amp;lt;CR&amp;gt;
autocmd bufenter * if (winnr(&amp;quot;$&amp;quot;) == 1 &amp;amp;&amp;amp; exists(&amp;quot;b:NERDTree&amp;quot;) &amp;amp;&amp;amp; b:NERDTree.isTabTree()) | q | endif

set nocompatible
set nu
set showmatch
set tabstop=4
set softtabstop=4
set shiftwidth=4
set noexpandtab
set autoindent
set backspace=indent,eol,start
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;vim-plug的常用命令&#34;&gt;Vim-plug的常用命令：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;查看插件状态： PlugStatus&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装插件：PlugInstall&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;更新插件：PlugUpdate&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;清理插件：PlugClean&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>制作一个离线下载环境</title>
      <link>https://caxavault.online/2019/010/</link>
      <pubDate>Fri, 15 Nov 2019 14:31:31 +0800</pubDate>
      
      <guid>https://caxavault.online/2019/010/</guid>
      <description>

&lt;h3 id=&#34;aria2的安装和使用&#34;&gt;aria2的安装和使用&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;源码编译和安装&lt;/strong&gt;：在&lt;code&gt;aria2&lt;/code&gt;的&lt;code&gt;github&lt;/code&gt;主页上，在其中的&lt;code&gt;Releases&lt;/code&gt;里面找到源码并下载，进行如下操作：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://github.com/aria2/aria2/releases/download/release-1.35.0/aria2-1.35.0.tar.gz
tar -zxvf aria2-1.35.0
cd aria2-1.35.0
./configure --prefix=/usr/local/aria2
make 
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置下&lt;code&gt;aria2&lt;/code&gt;的配置文件，并保存到&lt;code&gt;/etc/aria2/aria2.conf&lt;/code&gt;,&lt;strong&gt;注意使用的时候要把注释去掉&lt;/strong&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;dir=选择自己的下载目录   #下载目录
max-concurrent-downloads=3    #最多同时下载3个任务
input-file=/data/wwwroot/download/aria2.session    #从会话文件中读取下载任务
save-session=/etc/aria2/aria2.session    #在Aria2退出时保存`错误/未完成`的下载任务到会话文件
save-session-interval=60    #定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0
enable-rpc=true    #启用RPC,这样就能通过WebUI进行下载管理
rpc-allow-origin-all=true    #允许所有来源
rpc-listen-all=true    #允许非外部访问, 默认:false
rpc-secret=&amp;lt;TOKEN&amp;gt;    #设置密码
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在&lt;code&gt;usr/lib/systemd/system&lt;/code&gt;下创建一个名为&lt;code&gt;aria2c.service&lt;/code&gt;的配置文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[Unit]
Description=Aria2c Download Manager
After=network.target

[Service]
Type=simple
User=root
ExecStart=/usr/local/aria2/bin/aria2c --conf-path=/etc/aria2/aria2.conf

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;按照&lt;code&gt;systemd&lt;/code&gt;命令操作&lt;code&gt;aria2服务&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&#34;ariang的安装和使用&#34;&gt;ariang的安装和使用&lt;/h3&gt;

&lt;p&gt;和&lt;code&gt;aria2&lt;/code&gt;一样，直接到该项目的&lt;code&gt;github&lt;/code&gt;主页下载最新的源码：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://github.com/mayswind/AriaNg/releases/download/1.1.4/AriaNg-1.1.4.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;下载完后解压到&lt;code&gt;/var/www&lt;/code&gt;目录下，并在&lt;code&gt;nginx&lt;/code&gt;中配置运行：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;server {
    listen 9090;
    server_name _;
    root /var/www/ariang;
    location / {
       index index.html
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;file-browser的安装和使用&#34;&gt;file browser的安装和使用&lt;/h3&gt;

&lt;p&gt;根据官方教程：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://filebrowser.xyz/get.sh | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;自己写一个&lt;code&gt;sytemd&lt;/code&gt;文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[Unit]
Description=File browser
After=network.target

[Service]
User=root
ExecStart=/usr/local/bin/filebrowser --database /root/filebrowser.db -p 9090 -r /opt/yyc -a 0.0.0.0

[install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Nginx的安装和使用</title>
      <link>https://caxavault.online/2019/009/</link>
      <pubDate>Fri, 15 Nov 2019 13:36:02 +0800</pubDate>
      
      <guid>https://caxavault.online/2019/009/</guid>
      <description>

&lt;h3 id=&#34;nginx的安装&#34;&gt;Nginx的安装&lt;/h3&gt;

&lt;p&gt;本文在&lt;code&gt;centos7&lt;/code&gt;环境下，使用源码编译和安装&lt;code&gt;nginx&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;在安装·&lt;code&gt;nginx&lt;/code&gt;之前，首先安装一些必要的依赖：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum update
yum -y install pcre pcre-devel zlib zlib-devel openssl openssl-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;到&lt;a href=&#34;https://nginx.org/en/download.html&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;官网下载页面&lt;/a&gt;选择一个稳定的&lt;code&gt;nginx&lt;/code&gt;版本，下载、解压：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://nginx.org/download/nginx-1.16.1.tar.gz
tar -zxvf nginx-1.16.1.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置、编译、安装：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd nginx-1.16.1
./configure \
--prefix=/usr/local/nginx \
--with-http_ssl_module \
--with-http_stub_status_module \
--with-http_realip_module \
--with-threads
make
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;设置软链接：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ln -s /usr/local/nginx/sbin/nginx /usr/bin/nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;测试：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl localhost
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;nginx的配置&#34;&gt;Nginx的配置&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;在&lt;code&gt;/var&lt;/code&gt;下创建文件夹&lt;code&gt;www&lt;/code&gt;用于存放各个网站内容&lt;/li&gt;
&lt;li&gt;在&lt;code&gt;/usr/local/nginx&lt;/code&gt;下创建一个&lt;code&gt;sites-enabled&lt;/code&gt;的目录，用于存放各个网站的配置信息。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在&lt;code&gt;1.16.1&lt;/code&gt;版本下，&lt;code&gt;nginx&lt;/code&gt;的默认配置文件位置是：&lt;code&gt;/usr/local/nginx/conf/nginx.conf&lt;/code&gt;，，&lt;/p&gt;

&lt;p&gt;比如，我现在想创建一个域名为&lt;code&gt;mall.com&lt;/code&gt;的网站，那么应该存在的目录结构为：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /var/www/mall.com
cd /usr/local/nginx/sites-enabled/mall.com.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;mall.com&lt;/code&gt;的内容基本上就是一个静态网站，根目录包含&lt;code&gt;index.html&lt;/code&gt;网页之类。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mall.com.conf&lt;/code&gt;的格式如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name mall.com;
	root /var/www/mall.com/public;

	# SSL
	ssl_certificate /etc/letsencrypt/live/mall.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/mall.com/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/mall.com/chain.pem;

	# security
	include nginxconfig.io/security.conf;

	# index.html fallback
	location / {
		try_files $uri $uri/ /index.html;
	}

	# additional config
	include nginxconfig.io/general.conf;
}

# HTTP redirect
server {
	listen 80;
	listen [::]:80;

	server_name mall.com;

	include nginxconfig.io/letsencrypt.conf;

	location / {
		return 301 https://mall.com$request_uri;
	}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在默认的配置文件末尾加上：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;user www-data;
pid /run/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 65535;

events {
	multi_accept on;
	worker_connections 65535;
}

http {
	charset utf-8;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	server_tokens off;
	log_not_found off;
	types_hash_max_size 2048;
	client_max_body_size 16M;

	# MIME
	include mime.types;
	default_type application/octet-stream;

	# logging
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log warn;

	# SSL
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off;

	# Diffie-Hellman parameter for DHE ciphersuites
	ssl_dhparam /etc/nginx/dhparam.pem;

	# Mozilla Intermediate configuration
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

	# OCSP Stapling
	ssl_stapling on;
	ssl_stapling_verify on;
	resolver 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
	resolver_timeout 2s;

	# load configs
	include ../sites-enabled/*;
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>在centos7上安装python3</title>
      <link>https://caxavault.online/2019/008/</link>
      <pubDate>Fri, 08 Nov 2019 11:01:57 +0800</pubDate>
      
      <guid>https://caxavault.online/2019/008/</guid>
      <description>

&lt;h3 id=&#34;centos7上默认安装的python版本是2-7-实在是太旧了-需要另外安装一个python3-过去常用的方法是源码编译安装-然后使用软链接到python3-有些麻烦-本文使用yum源scl来安装-方便快捷&#34;&gt;&lt;strong&gt;centos7上默认安装的python版本是2.7， 实在是太旧了，需要另外安装一个python3，过去常用的方法是源码编译安装，然后使用软链接到python3，有些麻烦，本文使用yum源scl来安装，方便快捷&lt;/strong&gt;。&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装scl：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install centos-release-scl
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;检查scl中支持的python3版本：&lt;a href=&#34;https://www.softwarecollections.org/en/scls/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;这个地址&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装选定版本的python3：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install rh-python36
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;bash中默认使用新版python：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;scl enable rh-python36 bash
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;设置到环境变量，避免每次开机都要重新设置，将下行写入到&lt;code&gt;~/.bash_profile&lt;/code&gt;中：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;source scl_source enable rh-python36
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装开发工具：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum groupinstall &#39;Development Tools&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;检查下python、pip版本，创建虚拟环境：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;python --version
pip --version
python -m venv venv
source venv/bin/activate
deactivate
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>使用frp进行内网穿透</title>
      <link>https://caxavault.online/2019/007/</link>
      <pubDate>Sun, 03 Nov 2019 13:45:13 +0800</pubDate>
      
      <guid>https://caxavault.online/2019/007/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;在很多时候，我们帮助客户解决问题的时候，需要远程他们的电脑。之前常用的远程控制工具，比如&lt;code&gt;teamviewer&lt;/code&gt;、&lt;code&gt;向日葵&lt;/code&gt;等，变得越来越难用，速度越来越慢（&lt;del&gt;除非充值&lt;/del&gt;）。所以还是自己用自己的VPS和内网穿透工具搭建一个远程控制的环境较好。&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;vps主机端口选择&#34;&gt;vps主机端口选择&lt;/h3&gt;

&lt;p&gt;因为可能需要远程多台电脑，所以建议在vps的安全组里面开启一段连续的端口号，比如40000-45000。&lt;/p&gt;

&lt;h3 id=&#34;frp的安装&#34;&gt;frp的安装&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;服务端&lt;/strong&gt;：也就是你的vps主机，需要安装&lt;code&gt;frps&lt;/code&gt;，主要就是两个文件：&lt;code&gt;frps.exe&lt;/code&gt;和&lt;code&gt;frps.ini&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;注意一下这两个文件的位置，个人的摆放位置是：&lt;code&gt;/usr/local/bin/frps/frps.exe&lt;/code&gt;和&lt;code&gt;/etc/frp/frps.ini&lt;/code&gt;，另外把&lt;code&gt;frps.service&lt;/code&gt;里面对应的内容修改。&lt;/p&gt;

&lt;p&gt;选择一个端口用于和内网机器交互：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[common]
bind_port = 选择一个端口（1024-49151）
vhost_http_port = 选择一个端口（1024-49151）
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置改完之后，用&lt;code&gt;systemd&lt;/code&gt;运行服务：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cp systemd/frps.service /usr/lib/systemd/system
systemd enable frps
systemd start frps
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;客户端&lt;/strong&gt;：即需要远程控制的内网主机，使用对应的客户端文件：&lt;code&gt;frpc.exe&lt;/code&gt;和&lt;code&gt;frpc.ini&lt;/code&gt;，打开&lt;code&gt;frpc.ini&lt;/code&gt;进行配置：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[common]
server_addr = 服务器ip地址
server_port = 服务器配置的bind_port

[rdp]
type = tcp
local_ip = 127.0.0.1
local_port = 3389
remote_port = 选择一个连接端口
custom_domains = 选择一个连接域名

[web]
type = http
local_port = 内网网站端口
custom_domains = 选择一个连接域名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;配置完成，直接运行：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;frpc.exe -c frpc.ini
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在自己的机器上远程控制内网机器：直接使用windows的远程控制桌面即可，输入&lt;code&gt;custom_domains:remote_port&lt;/code&gt;即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>梯子安装指南</title>
      <link>https://caxavault.online/2019/006/</link>
      <pubDate>Fri, 18 Oct 2019 17:20:04 +0800</pubDate>
      
      <guid>https://caxavault.online/2019/006/</guid>
      <description>

&lt;h3 id=&#34;linux发行版选择&#34;&gt;Linux发行版选择&lt;/h3&gt;

&lt;p&gt;现在一般的vps服务商主要提供以下几种Linux发型版：&lt;code&gt;CentOS&lt;/code&gt;、&lt;code&gt;Ubuntu&lt;/code&gt;、&lt;code&gt;Debian&lt;/code&gt;，我选用的是&lt;code&gt;CentOS&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&#34;bbr加速&#34;&gt;bbr加速&lt;/h3&gt;

&lt;p&gt;大部分人购买vps的主要用途是搭建梯子，那么网速就是头等大事，在无法改变带宽的情况下，通过提高网络吞吐量来加速网络是一种切实可行的方法。&lt;/p&gt;

&lt;p&gt;bbr是谷歌研发的一种TCP拥塞控制算法，它可以有效提高吞吐量和降低网络延迟，并且Linux Kernel4.9+已经集成了该算法。&lt;/p&gt;

&lt;p&gt;先检查Linux内核版本：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# uname -r
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;看看结果，如果是输出类似：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;3.10.0-957.5.1.el7.x86_64&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;则表示先升级内核，然后才能开启Google BBR。（升级内核可以参考&lt;a href=&#34;https://www.xiaoz.me/archives/9919&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;）&lt;/p&gt;

&lt;p&gt;若内核大于4.9，那么我们直接使用一键脚本即可：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh
chmod +x bbr.sh
./bbr.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完成后检查一下结果，看是不是确实成功开启：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sysctl net.ipv4.tcp_congestion_control
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果成功，返回值一般为&lt;code&gt;net.ipv4.tcp_congestion_control = bbr&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;v2ray的安装和使用&#34;&gt;V2ray的安装和使用&lt;/h3&gt;

&lt;p&gt;众所周知，ss/ssr已经被墙完美识别，那么现存的方法其实主要就是v2ray和wireguard等富强技术。wireguard还不是那么成熟和稳定，因此我自己选用v2ray。&lt;/p&gt;

&lt;p&gt;首先，使用一键脚本安装v2ray。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://install.direct/go.sh
bash go.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装好之后，配一下自带的配置文件，地址在&lt;code&gt;/etc/v2ray/config.json&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果仅仅是简单实用google等，偶尔查阅使用，可以简单配置下，使用tcp代理。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;{
  &amp;quot;inbounds&amp;quot;: [{
    &amp;quot;port&amp;quot;: 选择一个端口号,
    &amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;,
    &amp;quot;settings&amp;quot;: {
      &amp;quot;clients&amp;quot;: [
        {
          &amp;quot;id&amp;quot;: &amp;quot;选择一个ID&amp;quot;,
          &amp;quot;level&amp;quot;: 1,
          &amp;quot;alterId&amp;quot;: 64
        }
      ]
    }
  }],
  &amp;quot;outbounds&amp;quot;: [{
    &amp;quot;protocol&amp;quot;: &amp;quot;freedom&amp;quot;,
    &amp;quot;settings&amp;quot;: {}
  },{
    &amp;quot;protocol&amp;quot;: &amp;quot;blackhole&amp;quot;,
    &amp;quot;settings&amp;quot;: {},
    &amp;quot;tag&amp;quot;: &amp;quot;blocked&amp;quot;
  }],
  &amp;quot;routing&amp;quot;: {
    &amp;quot;rules&amp;quot;: [
      {
        &amp;quot;type&amp;quot;: &amp;quot;field&amp;quot;,
        &amp;quot;ip&amp;quot;: [&amp;quot;geoip:private&amp;quot;],
        &amp;quot;outboundTag&amp;quot;: &amp;quot;blocked&amp;quot;
      }
    ]
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果是深度用户，那么可能使用WebSocket+TLS+CDN的方式更为可靠，因为如果富强被发现的话，IP可能会被封，谁都不希望自己花钱买的vps不能用，所以，最好还是用这种方法更保险，按照以下步骤来：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;购买域名并添加A记录解析到你的VPS主机IP地址；（如果是国外的域名不需要实名认证，如果是国内的域名，需要实名认证，如果想打开80端口，那么还需要备案，但是这样也有好处，可以套个国内的CDN，加速效果更好）；&lt;/li&gt;
&lt;li&gt;使用Caddy/Nginx等软件反代，这里我们使用Caddy，因为它是使用golang编写的，部署和使用更为便捷（特别是https）；&lt;/li&gt;
&lt;li&gt;套CDN，如果是国外的域名，那使用CloudFlare可能是一个比较好的选择。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;那么，我们先看一下ws+tls的v2ray服务端配置：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;{
  &amp;quot;inbounds&amp;quot;: [{
    &amp;quot;port&amp;quot;: 选择一个端口号,
    &amp;quot;listen&amp;quot;: &amp;quot;127.0.0.1&amp;quot;,
    &amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;,
    &amp;quot;settings&amp;quot;: {
      &amp;quot;clients&amp;quot;: [
        {
          &amp;quot;id&amp;quot;: &amp;quot;选择一个ID&amp;quot;,
          &amp;quot;level&amp;quot;: 1,
          &amp;quot;alterId&amp;quot;: 64
        }
      ]
    },
  
  &amp;quot;streamSettings&amp;quot;: {
    &amp;quot;network&amp;quot;: &amp;quot;ws&amp;quot;,
    &amp;quot;wsSettings&amp;quot;: {
	&amp;quot;path&amp;quot;: &amp;quot;/ray&amp;quot;
     }
  }}],
  &amp;quot;outbounds&amp;quot;: [{
    &amp;quot;protocol&amp;quot;: &amp;quot;freedom&amp;quot;,
    &amp;quot;settings&amp;quot;: {}
  },{
    &amp;quot;protocol&amp;quot;: &amp;quot;blackhole&amp;quot;,
    &amp;quot;settings&amp;quot;: {},
    &amp;quot;tag&amp;quot;: &amp;quot;blocked&amp;quot;
  }],
  &amp;quot;routing&amp;quot;: {
    &amp;quot;rules&amp;quot;: [
      {
        &amp;quot;type&amp;quot;: &amp;quot;field&amp;quot;,
        &amp;quot;ip&amp;quot;: [&amp;quot;geoip:private&amp;quot;],
        &amp;quot;outboundTag&amp;quot;: &amp;quot;blocked&amp;quot;
      }
    ]
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再看一下客户端的配置：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  &amp;quot;outbounds&amp;quot;: [
    {
      &amp;quot;tag&amp;quot;: &amp;quot;proxy&amp;quot;,
      &amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;,
      &amp;quot;settings&amp;quot;: {
        &amp;quot;vnext&amp;quot;: [
          {
            &amp;quot;address&amp;quot;: &amp;quot;域名&amp;quot;,
            &amp;quot;port&amp;quot;: 443,
            &amp;quot;users&amp;quot;: [
              {
                &amp;quot;id&amp;quot;: &amp;quot;你的ID&amp;quot;,
                &amp;quot;alterId&amp;quot;: 0,
                &amp;quot;email&amp;quot;: &amp;quot;t@t.tt&amp;quot;,
                &amp;quot;security&amp;quot;: &amp;quot;auto&amp;quot;
              }
            ]
          }
        ],
        &amp;quot;servers&amp;quot;: null,
        &amp;quot;response&amp;quot;: null
      },
      &amp;quot;streamSettings&amp;quot;: {
        &amp;quot;network&amp;quot;: &amp;quot;ws&amp;quot;,
        &amp;quot;security&amp;quot;: &amp;quot;tls&amp;quot;,
        &amp;quot;tlsSettings&amp;quot;: {
          &amp;quot;allowInsecure&amp;quot;: true,
          &amp;quot;serverName&amp;quot;: null
        },
        &amp;quot;tcpSettings&amp;quot;: null,
        &amp;quot;kcpSettings&amp;quot;: null,
        &amp;quot;wsSettings&amp;quot;: {
          &amp;quot;connectionReuse&amp;quot;: true,
          &amp;quot;path&amp;quot;: &amp;quot;/ray&amp;quot;,
          &amp;quot;headers&amp;quot;: null
        },
        &amp;quot;httpSettings&amp;quot;: null,
        &amp;quot;quicSettings&amp;quot;: null
      },
      &amp;quot;mux&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true
      }
    },
    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动v2ray服务：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl enable v2ray
systemctl start v2ray
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;caddy的安装和使用&#34;&gt;Caddy的安装和使用&lt;/h3&gt;

&lt;p&gt;使用官方提供的脚本直接安装：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl https://getcaddy.com | bash -s personal
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装完了可以用&lt;code&gt;which caddy&lt;/code&gt;命令查看一下安装位置，一般情况下是在&lt;code&gt;/usr/local/bin/caddy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在&lt;code&gt;/etc&lt;/code&gt;下创建caddy的配置文件&lt;code&gt;/etc/caddy/Caddyfile&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;****.com   //此处填写你的域名
{
  proxy /ray localhost:端口号 {
    websocket
    header_upstream -Origin
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;手动运行caddy：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;caddy -conf /etc/caddy/Caddyfile
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;把caddy配置成服务（嫌麻烦直接进入/etc/systemd/system/caddy.service修改www-data为root）&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo curl -s https://raw.githubusercontent.com/mholt/caddy/master/dist/init/linux-systemd/caddy.service -o /etc/systemd/system/caddy.service  

chown root:root /usr/local/bin/caddy
chmod 755 /usr/local/bin/caddy
sudo setcap &#39;cap_net_bind_service=+ep&#39; /usr/local/bin/caddy
chown root:root /etc/caddy/Caddyfile
chmod 644 /etc/caddy/Caddyfile
mkdir /var/www
mkdir /etc/ssl/caddy
chown -R root:root /etc/ssl/caddy
chmod 0770 /etc/ssl/caddy

sudo systemctl daemon-reload        # 重新加载 systemd 配置
sudo systemctl enable caddy.service # 设置 caddy 服务自启动
sudo systemctl status caddy.service # 查看 caddy 状态
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;每次修改了caddy配置文件都需要重启下服务：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-BASH&#34;&gt;sudo systemctl restart caddy.service
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;套cdn&#34;&gt;套CDN&lt;/h3&gt;

&lt;p&gt;使用CloudFlare就可以了，可以参考其他网络教程。&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;在linux客户端上访问外网&#34;&gt;在Linux客户端上访问外网&lt;/h3&gt;

&lt;p&gt;首先安装&lt;code&gt;v2ray&lt;/code&gt;，整个过程和服务端上一样，只是配置是客户端的而已，如果嫌麻烦，可以把&lt;code&gt;v2rayN&lt;/code&gt;上的一个配置复制过来，但是这里需要注意的是&lt;strong&gt;inbounds&lt;/strong&gt;里面需要手动配置下http的代理端口（&lt;code&gt;v2rayN&lt;/code&gt;工具是自带&lt;code&gt;privoxy&lt;/code&gt;将&lt;code&gt;socks5代理&lt;/code&gt;转为&lt;code&gt;http代理&lt;/code&gt;的）：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;...
&amp;quot;inbounds&amp;quot;: [
    {
      &amp;quot;tag&amp;quot;: &amp;quot;proxy&amp;quot;,
      &amp;quot;port&amp;quot;: socks5代理端口,
      &amp;quot;listen&amp;quot;: &amp;quot;127.0.0.1&amp;quot;,
      &amp;quot;protocol&amp;quot;: &amp;quot;socks&amp;quot;,
      &amp;quot;sniffing&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true,
        &amp;quot;destOverride&amp;quot;: [
          &amp;quot;http&amp;quot;,
          &amp;quot;tls&amp;quot;
        ]
      },
      &amp;quot;settings&amp;quot;: {
        &amp;quot;auth&amp;quot;: &amp;quot;noauth&amp;quot;,
        &amp;quot;udp&amp;quot;: true,
        &amp;quot;ip&amp;quot;: null,
        &amp;quot;address&amp;quot;: null,
        &amp;quot;clients&amp;quot;: null
      },
      &amp;quot;streamSettings&amp;quot;: null
    },
    {
      &amp;quot;port&amp;quot;: http代理端口,
      &amp;quot;protocol&amp;quot;: &amp;quot;http&amp;quot;,
      &amp;quot;settings&amp;quot;: {},
      &amp;quot;tag&amp;quot;: &amp;quot;proxy-http&amp;quot;
    }
  ],
  &amp;quot;outbounds&amp;quot;: [
    {
      &amp;quot;tag&amp;quot;: &amp;quot;proxy&amp;quot;,
      &amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;,
      &amp;quot;settings&amp;quot;: {
        &amp;quot;vnext&amp;quot;: [
          {
            &amp;quot;address&amp;quot;: &amp;quot;服务端域名&amp;quot;,
            &amp;quot;port&amp;quot;: 443,
            &amp;quot;users&amp;quot;: [
              {
                &amp;quot;id&amp;quot;: &amp;quot;填写正确的用户ID&amp;quot;,
                &amp;quot;alterId&amp;quot;: 0,
                &amp;quot;security&amp;quot;: &amp;quot;auto&amp;quot;
              }
            ]
          }
        ],
        &amp;quot;servers&amp;quot;: null,
        &amp;quot;response&amp;quot;: null
      },
      &amp;quot;streamSettings&amp;quot;: {
        &amp;quot;network&amp;quot;: &amp;quot;ws&amp;quot;,
        &amp;quot;security&amp;quot;: &amp;quot;tls&amp;quot;,
        &amp;quot;tlsSettings&amp;quot;: {
          &amp;quot;allowInsecure&amp;quot;: true,
          &amp;quot;serverName&amp;quot;: null
        },
        &amp;quot;tcpSettings&amp;quot;: null,
        &amp;quot;kcpSettings&amp;quot;: null,
        &amp;quot;wsSettings&amp;quot;: {
          &amp;quot;connectionReuse&amp;quot;: true,
          &amp;quot;path&amp;quot;: &amp;quot;/配置好的路径&amp;quot;,
          &amp;quot;headers&amp;quot;: null
        },
        &amp;quot;httpSettings&amp;quot;: null,
        &amp;quot;quicSettings&amp;quot;: null
      },
      &amp;quot;mux&amp;quot;: {
        &amp;quot;enabled&amp;quot;: true
      }
    },
    ...
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>制造看板安装说明</title>
      <link>https://caxavault.online/2019/005/</link>
      <pubDate>Wed, 16 Oct 2019 10:01:22 +0800</pubDate>
      
      <guid>https://caxavault.online/2019/005/</guid>
      <description>

&lt;h3 id=&#34;安装步骤&#34;&gt;安装步骤&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装&lt;code&gt;完整IIS&lt;/code&gt;。不同版本电脑安装方法不同，可分别从网上搜索。由于看板产品基于asp.net开发，确保在安装时选择应用程序开发功能中.net扩展性、ASP、ASP.NET等，如果不确定安装哪个，可以对”应用程序开发功能”中所有选项打勾。参考安装IIS的网址例如：&lt;a href=&#34;http://www.jb51.net/article/29787.htm&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;win7下IIS的安装和配置&lt;/a&gt; 。前五步即可。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装CAXA WebBoard(图文档&lt;strong&gt;版本位数&lt;/strong&gt;).exe。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装完成后，先看看服务器的数据库，在数据库PLM的可编程性、存储过程中是否有。确保sql执行过。(有些电脑由于环境变量有问题，没法执行安装盘里面的sql。或者把目录下的所有每一个sql都拖进数据库中执行一遍，结果提示错误不用管。其他项目添加的sql，没有时间整理)
&lt;img src=&#34;http://150.136.142.90:9090/caxavault/board_pics/11.png&#34; alt=&#34;安装时需要执行的sql&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://150.136.142.90:9090/caxavault/board_pics/12.png&#34; alt=&#34;数据库中应有的存储过程&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;设置&lt;code&gt;授权锁&lt;/code&gt;，步骤打开C:\Program Files\caxa\CAXA WebBoard\lib\server目录下的e4ncli.ini,修改ip地址为授权地址，不知道的话问经理。然后安装服务、启动服务、运行LicInfoService.exe。查看C:\Program Files\caxa\CAXA WebBoard\FileCache目录下的lic.xml是否发生变化，如果value值11551后面跟的不是0，那就是成功了。否则授权没有成功。&lt;/li&gt;

&lt;li&gt;&lt;p&gt;如果电脑是64位，安装的是32位的图文档，需要修改是否启用32位应用程序为true。&lt;img src=&#34;http://150.136.142.90:9090/caxavault/board_pics/13.png&#34; alt=&#34;IIS应用程序池&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;测试看板是否正确安装，注意，看板使用时客户端&lt;strong&gt;只支持ie&lt;/strong&gt;。如果报错为500.21 internal server error 或者400.17，需要&lt;strong&gt;重装iis&lt;/strong&gt;，在cmd命令行中执行aspnet_regiis -i。如果报错为server error in / application could not write to output file 拒绝访问，需要修改文件夹c:\windows\temp的 iisusers&lt;strong&gt;权限&lt;/strong&gt;，可从网上获取详细资料。如果登录时报错，可能是C:\Program Files\caxa\CAXA WebBoard\bin\ WebUserCom.dll没有&lt;strong&gt;注册&lt;/strong&gt;成功，需要使用regsvr32注册这个dll。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;客户端需要安装&lt;code&gt;浏览控件&lt;/code&gt;，应该是根据图文档位数安装caxawebplugin.exe(&lt;strong&gt;或者&lt;/strong&gt;确定只安装32位的)。另外需要设置C:\Program Files (x86)\CAXA\caxaweb\ &lt;code&gt;zipviewermap.xml&lt;/code&gt;,里面配置使用哪种应用打开某格式文件。客户端的&lt;code&gt;ie浏览器&lt;/code&gt;需要如下&lt;code&gt;设置&lt;/code&gt;：将服务器的地址添加到&lt;code&gt;受信任的站点&lt;/code&gt;中。安全设置里面&lt;code&gt;activex控件&lt;/code&gt;和插件中，对下载未签名的activex控件选择启用，下载一千名的activex控件选择启用。&lt;img src=&#34;http://150.136.142.90:9090/caxavault/board_pics/14.png&#34; alt=&#34;IE Internet选项&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://150.136.142.90:9090/caxavault/board_pics/15.png&#34; alt=&#34;IE安全设置&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;注意事项&#34;&gt;注意事项&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;当需要转换某格式文档例如doc文件转换为pdf时，需要在web.config文件中的ViewtoTypeString值中添加，并在服务器中配置转换pdf。如果word、excel、ppt无法转换为pdf，请参考《Office在线浏览异常解决方法.docx》
Web.config中的CxCacheDir文件夹需要手动创建。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>ssh禁止root用户直接登录并修改默认端口</title>
      <link>https://caxavault.online/2019/004/</link>
      <pubDate>Tue, 20 Aug 2019 15:23:34 +0800</pubDate>
      
      <guid>https://caxavault.online/2019/004/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Linux最高权限用户root，默认可以直接登录sshd，为了提高服务器的安全性，需要对它进行禁止，使得攻击者无法通过暴力破解来获取root权限&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;新建用户&#34;&gt;新建用户&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;新建一个用户：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;useradd ***（***为你所要新建的用户名）
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;为新用户设置密码：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;passwd ***（***为你要新建用户名的密码）
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;修改sshd配置，禁止root直接登录：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#vim /etc/ssh/sshd_config -&amp;gt; PermitRootLogin -&amp;gt; no
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;修改完毕后，重启sshd服务：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#service sshd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;下次登录，先使用***登录，然后通过&lt;code&gt;su root&lt;/code&gt;来获取root权限。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;修改sshd默认端口&#34;&gt;修改sshd默认端口&lt;/h3&gt;

&lt;p&gt;虽然更改端口无法在根本上抵御端口扫描，但是，可以在一定程度上提高防御。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开sshd配置文件：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#vim /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;找到&lt;code&gt;#Port 22&lt;/code&gt;字段，删掉&lt;code&gt;#&lt;/code&gt;，将22改为其他大的端口号。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;重启sshd服务：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#service sshd restart
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;同时修改登录工具的端口号。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;只允许用户从指定的ip登录&#34;&gt;只允许用户从指定的IP登录&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;编辑ssh的配置文件&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;，在文件的最后面另起一行添加：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;AllowUsers root@***.***.***.***
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;保存并退出，再重启一下ssh服务。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>用户工具箱（PlmUserToolBox.exe）使用说明</title>
      <link>https://caxavault.online/2019/003/</link>
      <pubDate>Mon, 19 Aug 2019 14:30:21 +0800</pubDate>
      
      <guid>https://caxavault.online/2019/003/</guid>
      <description>

&lt;h3 id=&#34;工具简介&#34;&gt;工具简介&lt;/h3&gt;

&lt;p&gt;该工具主要用于以下用途：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;元模型类/关系/行为属性的增加/修改/删除&lt;/li&gt;
&lt;li&gt;对象查看器中属性的增加/修改/删除&lt;/li&gt;
&lt;li&gt;数据库表中新增字段的添加&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;设置工具当前应用&#34;&gt;设置工具当前应用&lt;/h3&gt;

&lt;p&gt;该工具会根据应用不同而加载不同的元模型域中的类或关系，因此在使用该工具前，需要在快捷方式的目标文本框中添加命令行参数：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;...PlmUserToolBox.exe -a 应用名
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;假设应用是图文档，那么设置如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://150.136.142.90:9090/caxavault/plmtools_pics/1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;登录&#34;&gt;登录&lt;/h3&gt;

&lt;p&gt;整个登录分为三个过程：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;身份验证（用户名/密码验证）&lt;/li&gt;
&lt;li&gt;是否导入已有修改&lt;/li&gt;
&lt;li&gt;元模型加载&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果服务端全局参数未开启&lt;strong&gt;单点登录&lt;/strong&gt;，可能会有两次登录框出现需要点击确定，之所以会这样，是因为第一次不能确定是不是加载当前元模型，如果导入了已有修改，那么会将已经修改替换对应的元模型文件，然后再加载。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;导入的已有修改是一个名为.rar的压缩包，该压缩包是通过工具的导出功能得到的，具有一定的格式，如果使用自己手动新建的压缩包，可能无法导入元模型和对象查看器文件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://150.136.142.90:9090/caxavault/plmtools_pics/2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;元模型属性修改&#34;&gt;元模型属性修改&lt;/h3&gt;

&lt;p&gt;打开工具后，首先进行的工作就是元模型属性的修改，包括类/关系/行为属性的增加/删除/修改。比如说，我们要给零部件增加属性&lt;code&gt;Test&lt;/code&gt;，首先在左侧的元模型定义树中找到Part，单击后中间区域会出现零部件的所有属性信息，双击某个属性，会弹出该属性的具体属性只读对话框。&lt;/p&gt;

&lt;p&gt;点击下面一排按钮中的&lt;code&gt;新增&lt;/code&gt;，在弹出的对话框中填入新属性的&lt;code&gt;内部名&lt;/code&gt;、&lt;code&gt;外部名&lt;/code&gt;等信息，完成后点击&lt;code&gt;保存&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://150.136.142.90:9090/caxavault/plmtools_pics/3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;操作成功后，下方的&lt;code&gt;输出信息&lt;/code&gt;中会显示对应的消息提示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://150.136.142.90:9090/caxavault/plmtools_pics/4.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;对象查看器属性修改&#34;&gt;对象查看器属性修改&lt;/h3&gt;

&lt;p&gt;元模型属性改好后，可以修改对象查看器属性，切换左侧的&lt;code&gt;元模型定义树&lt;/code&gt;至&lt;code&gt;对象查看器定义树&lt;/code&gt;，我们现在需要将零部件新增的属性&lt;code&gt;Test&lt;/code&gt;在图文档零部件查看器中显示出来，选中&lt;code&gt;零部件&lt;/code&gt;下的&lt;code&gt;零部件属性查看器&lt;/code&gt;，依次点击&lt;code&gt;编辑&lt;/code&gt;、&lt;code&gt;新增属性&lt;/code&gt;，在弹出的新增属性对话框中，将&lt;code&gt;Test&lt;/code&gt;这一行前面的选框勾上，点击&lt;code&gt;确定&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://150.136.142.90:9090/caxavault/plmtools_pics/5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;如果没有问题的话，会在界面中看到该属性已经增加到对象查看器文件中，点击&lt;code&gt;保存&lt;/code&gt;即可，&lt;code&gt;输出信息&lt;/code&gt;同样会显示操作内容。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://150.136.142.90:9090/caxavault/plmtools_pics/6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;映射数据库&#34;&gt;映射数据库&lt;/h3&gt;

&lt;p&gt;完成元模型和对象查看器修改之后，需要将新增的属性映射到对应的数据库表中，此时点击菜单栏中的&lt;code&gt;更新数据库&lt;/code&gt;，会弹出需要映射的字段信息：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://150.136.142.90:9090/caxavault/plmtools_pics/7.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;点击&lt;code&gt;开始更新&lt;/code&gt;，会自动连接数据库进行更新操作。&lt;/p&gt;

&lt;h3 id=&#34;上传模板库&#34;&gt;上传模板库&lt;/h3&gt;

&lt;p&gt;完成了元模型修改-&amp;gt;对象查看器修改-&amp;gt;映射数据库等操作之后，需要将修改的元模型文件和对象查看器文件上传到模板库供其他客户端下载使用。点击工具栏的&lt;code&gt;上传模板库&lt;/code&gt;按钮，会分别列出已修改的元模型文件和对象查看器文件，点击&lt;code&gt;上传&lt;/code&gt;会将文件上传至模板库。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://150.136.142.90:9090/caxavault/plmtools_pics/8.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;重启服务&#34;&gt;重启服务&lt;/h3&gt;

&lt;p&gt;完成了以上一些列的修改，需要将&lt;strong&gt;通用服务&lt;/strong&gt;重启，这是非常重要的一步。&lt;/p&gt;

&lt;h3 id=&#34;其他功能&#34;&gt;其他功能&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;导出修改记录：可以将修改记录以txt格式的文本导出，便于查看自己进行过哪些操作。&lt;/li&gt;
&lt;li&gt;导出修改文件：会以压缩包的格式将已修改的元模型文件和对象查看器文件打包，便于在其他机器上继续操作。&lt;/li&gt;
&lt;li&gt;导入修改文件：可以继续在其他机器上未完成的修改。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;相关文件下载&#34;&gt;相关文件下载&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://150.136.142.90:9090/caxavault/%E7%94%A8%E6%88%B7%E5%B7%A5%E5%85%B7%E7%AE%B1%EF%BC%88PlmUserToolBox.exe%EF%BC%89%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E.pdf&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;用户工具箱（PlmUserToolBox.exe）使用说明.pdf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://150.136.142.90:9090/caxavault/plmtools2019.rar&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;plmtools_2019sp1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>适合自己的 NAS 怎么选？不妨从这 4 个参数入手</title>
      <link>https://caxavault.online/2019/002/</link>
      <pubDate>Fri, 16 Aug 2019 15:16:31 +0800</pubDate>
      
      <guid>https://caxavault.online/2019/002/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://cdn.sspai.com/article/d28c50f9-9982-f4a0-964a-f6a2f3e23dad.jpg?imageMogr2/quality/95/thumbnail/!1440x480r/gravity/Center/crop/1440x480&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;根据需求有限考虑硬盘数&#34;&gt;根据需求有限考虑硬盘数&lt;/h3&gt;

&lt;p&gt;对于大部分人来说，购买NAS的需求大致都可以归纳为两个场景：家用和小型办公。他们的出发点一般都是这样的：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;对价格相对敏感&lt;/li&gt;
&lt;li&gt;没有海量的数据存储需求&lt;/li&gt;
&lt;li&gt;同时接入的用户不多，但时不时会有需要在成员间共享媒体文件的情况&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;在这个讨论语境下，我们先排除掉最大可插入硬盘数为16盘位及以上的高端机型，然后再确定下一步需要考虑的切入点。&lt;/p&gt;

&lt;p&gt;这里，我们不妨将NAS看作是一台低功耗的电脑。一般而言，这台电脑由这几个部分组成：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CPU&lt;/li&gt;
&lt;li&gt;内存&lt;/li&gt;
&lt;li&gt;网口&lt;/li&gt;
&lt;li&gt;硬盘插槽&lt;/li&gt;
&lt;li&gt;硬盘&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;这里我们选择的切入点是硬盘插槽数量，也就是盘位。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2盘位的机型&lt;/strong&gt;是入门的首选。如果你之前没有接触过任何的NAS，那买这个机型肯定不会错。&lt;/p&gt;

&lt;p&gt;一方面2盘位的机型价格不会贵到哪里去，另一方面买硬盘也只要买两块就好了。通过2盘位的机型，刚刚接触NAS的朋友还可以深入了解某个系统的特性，为日后的升级和购买打下基础。当然，2盘位的机型还适合那些使用场景比较单一的用户，比如将NAS作为数据备份中心、家庭影音分享入口或单纯作为拓展存储空间。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4/5盘位&lt;/strong&gt;是相对进阶的选择，多盘位可以带来更多可玩性。&lt;/p&gt;

&lt;p&gt;首先，更多的盘位能选择组成一个 RAID 使用，让数据在获得更好的安全性的同时兼顾连续使用硬盘空间的优点。其次，厂商在设计时也会考虑到用户在使用 &lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;5&lt;/sub&gt; 盘位下存储的数据会远大于 2 盘位，自然会给 &lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;5&lt;/sub&gt; 盘位的机型配备更好的处理器和更多的内存，让用户可以同时运行更多的服务或是运行一些需要高性能处理器的任务，比如同时用作备份中心和家庭影音分享入口、自动创建高频率快照、使用 Docker 等等；最后更多的盘位也能在未来存储空间不足时依次换入更大的硬盘换取更多的空间，升级起来相对经济。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6~10 盘位&lt;/strong&gt;基本就是家用和小型办公室所需要的最好配置了。在兼顾 &lt;sup&gt;4&lt;/sup&gt;&amp;frasl;&lt;sub&gt;5&lt;/sub&gt; 盘位优点的同时，我们还可以选择划分出更多的 RAID，将不同环境的数据彼此隔离，使得整个 NAS 井井有条。同时，6~10 盘位的机型有很大一部分还支持扩展卡，让整个 NAS 更具可玩性。比方说更快的网口、更多的 SSD 插槽，我们甚至还可以插入显卡、加上更好的处理器和更大的内存，让这台 NAS 轻松胜任庞大的数据分享、媒体存储、多人合作甚至高级虚拟化需求等场景。&lt;/p&gt;

&lt;p&gt;所以选购时我们应当关注的首要切入点其实已经很清楚了：&lt;strong&gt;通过了解自己的需求来确定我们需要的最大可插入硬盘数，而通过最大可插入硬盘数，我们又可以进一步缩小可选 NAS 的范围。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;结合我个人的 NAS 使用经验来看，家用和小型办公室选购 NAS 时，不超过 12 个盘位是比较合适的选择。&lt;/p&gt;

&lt;h3 id=&#34;处理器和内存决定实际性能&#34;&gt;处理器和内存决定实际性能&lt;/h3&gt;

&lt;p&gt;确定适合自己的盘位范围以后，我们可以选择的机型不出意外就那么几款了，接下来就要考虑相对简单的部分——挑选 NAS 的处理器和内存。&lt;/p&gt;

&lt;p&gt;由于 NAS 本质就是一台电脑，处理器的型号和内存的大小还是会或多或少影响到一些功能的使用体验，比如快照功能。群晖和 QNAP 的快照功能只有在 Intel 和 AMD 机型才能获得最大可保留快照数量，相比之下 ARM 机型最大快照数量则只有 Intel 和 AMD 的 &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;4&lt;/sub&gt; 到 &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; 左右。&lt;/p&gt;

&lt;p&gt;此外内存的多少也同样会影响到快照的数目，小内存可以存放的快照数目显然是比不上大内存的。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn.sspai.com/2019/08/12/602dec7aefe3ff0b05856a560976b881.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1&#34; alt=&#34;功能受到内存和处理器的影响&#34; /&gt;&lt;/p&gt;

&lt;p&gt;因此这里还是强烈建议选购处理器是 Intel 机型的 NAS，比如 QNAP 的 453Bmini，比起同样是 4 盘位的 ARM 机型会贵上不少，但胜在功能全面，多花点钱还是值得的。&lt;/p&gt;

&lt;p&gt;内存方面，有了更多的内存才能干更多的事情不是吗？所以我推荐 2 盘位的内存 2G 起步，4/5 盘位的内存建议是 4G 起步，6~10 盘位的内存建议 8G 起步。&lt;/p&gt;

&lt;p&gt;不过 QNAP 这边几乎所有的机型都可以手动更换或者添加内存条（要注意最大内存支持情况），而群晖那边则要看具体机型。&lt;/p&gt;

&lt;h3 id=&#34;硬盘-保证长期使用体验的基础&#34;&gt;硬盘：保证长期使用体验的基础&lt;/h3&gt;

&lt;p&gt;一方面大家购买使用 NAS 大多需要它在没有人工干预的情况下「全年不间断地安全运行」，另一方面 NAS 独特的工作机制也会反复读写硬盘，所以通常消费级硬盘在如此高强度的工作环境下会快速损耗，难以保证 NAS 里的数据安全，耗费不必要的财力和精力。&lt;/p&gt;

&lt;p&gt;这也是为什么要好好挑选硬盘的原因。&lt;/p&gt;

&lt;p&gt;众所周知，硬盘根据内部存储介质主要分为机械硬盘和固态硬盘两类，而最为简单快捷的硬盘挑选方式就是参照你所购买的NAS供应商官网&lt;strong&gt;兼容性列表&lt;/strong&gt;。官网的兼容性列表都是基于大量官方测试后得到的结果，这里给出的硬盘在耐用性和性能方面都符合官方设计的要求。&lt;/p&gt;

&lt;p&gt;主流的 NAS 厂商都至少会提供一份兼容性列表，帮助用户正确购买硬盘。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn.sspai.com/2019/08/12/1ddb843198614c5ba0e51a5019de90ca.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1&#34; alt=&#34;QNAP 官网的兼容性列表&#34; /&gt;&lt;/p&gt;

&lt;p&gt;对于机械硬盘，选购时尽可能选择西部数码（West Digital）或者希捷（Seagate)这类大厂的机械硬盘，同时在网络搜索时最好带上「监控」「NAS」或是「企业级」这样的关键字，这样才能保证出色的性能和寿命。千万不要因为贪图便宜，购买一般的用在台式机或者笔记本电脑上的机械硬盘，这类硬盘并不适合放在 NAS 里使用。&lt;/p&gt;

&lt;p&gt;机械硬盘的读写速度取决于转速和存储密度，在同等存储密度下转速越快，读写速度也就越快，一般常见的转速有 5400rpm、7200rpm、10000rpm 等。不过高转速还要考虑到噪音的问题，用过 10000rpm 的我表示，多块这样的盘一起全速工作的感觉和飞机起飞差不多了……&lt;/p&gt;

&lt;p&gt;对于固态硬盘，购买时同样尽可能选择大厂的，如海盗船、Intel、镁光、三星、东芝、西数等等。这类大厂的主控相对而言可以承受更多的数据读写，而且售后也有所保证。不过购买 SSD 时还要考虑到颗粒的问题，现在市场上除了经常卖的 MLC 和 TLC 颗粒的 SSD，还多了非常多的 QLC SSD，这类 SSD 非常廉价，但是受限于 QLC 颗粒寿命短，所以根本不适合 NAS 这种大量读写的环境中。NAS 里的 SSD 最好还是至少使用 TLC 的 SSD 保证 SSD 的使用寿命。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn.sspai.com/2019/08/12/2cc12e91f84cd8da73e58146685e05e3.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1&#34; alt=&#34;SSD 的寿命&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在选购非企业级 SSD 时，还可以注意 SSD 的 TBW（Terabytes Written，终身最大写入量以 TB 做单位） 或是 DWPD （Drive Writes Per Day，寿命内可每日完整写入SSD固态硬盘所有容量的次数），这两个参数能够帮助估计 SSD 能够坚持多久，为数据保护做好准备。&lt;/p&gt;

&lt;h3 id=&#34;网口-获得更快的传输体验&#34;&gt;网口：获得更快的传输体验&lt;/h3&gt;

&lt;p&gt;当你组好了一个 NAS 以后可能会发现他的传输速度并不是那么的快，这是因为实际使用中传输速度还会受到 NAS 网口速度、路由器网口的速度、网线的性能、硬盘的工作速度、接收设备的网口速度和接收设备的硬盘速度等多方面因素影响。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn.sspai.com/2019/08/12/36885632fa97f2daa8ddde6ebc1c79e6.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1&#34; alt=&#34;每个环节都会影响传输速度&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;路由器网口的速度&lt;/strong&gt;可以在路由器官网的技术详情里看到。一般而言，家用路由器的网口速度是 1Gbps，只有少数高端的路由器会配备 2.5Gbps 的网口或是支持 链路聚合 的网口。如果你们家路由器的网口只有 100Mbps（100Mbps 的峰值速度为 12.5MB/s），那么在购买 NAS 之前一定要多加点预算去买个更好一点的路由器，毕竟现在机械硬盘的读写速度也不会只有区区的 12.5MB/s。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;网线的性能&lt;/strong&gt;也同样会影响传输的速度，网线的性能我们一般会用 CAT. (跟随数字）进行标识，常见的有：Cat.5（五类线，设计用于 100Mbps）、Cat.5e（超五类线，设计用于 1000Mbps）、 Cat.6（六类线，设计用于 1Gbps 和短距离的 10Gbps）、 Cat.6a （超六类线，设计用于 10Gbps），这些数据都会直接标注在线缆的外皮上；在网上购买时注意带上关键词基本就可以买到对应规格的网线。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;电脑的网口速度&lt;/strong&gt;和 NAS 网口速度的表示单位差不多都是 Mbps 或 Gbps，具体数据则可以在笔记本的配置信息页面中看到。通常来说现在电脑主板上集成的网口都是 1Gbps 的，当然有需要的话还可以考虑给台式机装一块 10Gbps 的网卡，为未来升级 NAS 做准备。&lt;/p&gt;

&lt;p&gt;最后影响传输速度的就是&lt;strong&gt;硬盘&lt;/strong&gt;了。NAS 里的硬盘和电脑里的硬盘都会影响传输速度，一般而言常见的 7200rmp 机械硬盘的，持续读写速度在 128MB/s ，而 SSD 的持续读写速度至少在 500MB/s 以及以上。换句话说，即便拥有充足的网络带宽，将 SSD 里的文件搬到 HDD 的 NAS 时可能也不会有非常快的速度。&lt;/p&gt;

&lt;h3 id=&#34;小结&#34;&gt;小结&lt;/h3&gt;

&lt;p&gt;最后，&lt;strong&gt;NAS 的传输速度是由上述几个要素里最慢的那个决定的&lt;/strong&gt;。想要体验非常顺畅的传输速度，传输环节里任何会出现瓶颈的地方都需要注意。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>浅谈跨域威胁与安全</title>
      <link>https://caxavault.online/2019/001/</link>
      <pubDate>Wed, 14 Aug 2019 10:58:21 +0800</pubDate>
      
      <guid>https://caxavault.online/2019/001/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;WEB前端中最常见的两种安全风险，XSS与CSRF，XSS，即跨站脚本攻击、CSRF即跨站请求伪造,两者属于跨域安全攻击，对于常见的XSS以及CSRF在此不多谈论，仅谈论一些不太常见的跨域技术以及安全威胁。&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;一-域&#34;&gt;一、 域&lt;/h2&gt;

&lt;p&gt;域，即域名对应的网站。不同的域名对应的不同的网站，相同的域名不同的端口也对应的不同的网站，因此，域，从字面意思以及实质意思都为空间，所以在web中空间即代表的是网站。&lt;/p&gt;

&lt;h2 id=&#34;二-同源策略-sop&#34;&gt;二、同源策略（SOP）&lt;/h2&gt;

&lt;h3 id=&#34;2-1-同源策略定义&#34;&gt;2.1 同源策略定义&lt;/h3&gt;

&lt;p&gt;同源策略限制了从同一个源加载的文档或脚本如何与来自另一个源的资源进行交互。这是一个用于隔离潜在恶意文件的重要安全机制。&lt;/p&gt;

&lt;p&gt;同源策略必须要同时满足以下三个条件，只要有任何一个不同，都被当作是不同的域：&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;协议相同&lt;/li&gt;
&lt;li&gt;域名相同&lt;/li&gt;
&lt;li&gt;端口号相同&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;举例说明：&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;协议&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;域名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;端口&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;是否同源&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;原因&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;http&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.a.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;www.a.com&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;80&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;http&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.b.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;www.b.com&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;80&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;否&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;域名不同&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;https&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.a.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;www.a.com&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;80&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;否&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;协议不同&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;http&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;a href=&#34;http://www.a.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;www.a.com&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;8080&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;否&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;端口不同&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;2-2-同源策略限制&#34;&gt;2.2 同源策略限制&lt;/h3&gt;

&lt;p&gt;同源策略限制了只有同源的脚本才会被执行，当打开一个网站的时候，会首先检查是否同源，如果非同源，在请求数据的时候，浏览器就会进行拦截报异常，拒绝访问。&lt;/p&gt;

&lt;h2 id=&#34;三-跨域本质&#34;&gt;三、跨域本质&lt;/h2&gt;

&lt;p&gt;跨域本质就是绕过同源策略的严格限制，安全与实用往往有时候会有一定的矛盾性，开发人员更注重的是功能的开发使用，例如有时候同二级域名下的不同三级域名需要进行一些信息数据传输时，共享一些资源时，同源策略将其限制，但是又要实现该功能，此时就诞生了一些跨越请求的技术。&lt;/p&gt;

&lt;h2 id=&#34;四-跨域技术&#34;&gt;四、跨域技术&lt;/h2&gt;

&lt;p&gt;本文将介绍较大范围的跨域，即从一个域到另一个域都将其归为跨域。因此，将其归结为两种情况：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;跨域请求&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;跨域跳转&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;五-跨域威胁&#34;&gt;五、跨域威胁&lt;/h2&gt;

&lt;h3 id=&#34;5-1-jsonp跨域&#34;&gt;5.1 JSONP跨域&lt;/h3&gt;

&lt;p&gt;5.1.1 jsonp跨域原理&lt;/p&gt;

&lt;p&gt;利用&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签没有跨域限制的漏洞，网页可以从其他来源域动态获取json数据，jsonp跨域请求一定需要对方的服务器支持才可以。&lt;/p&gt;

&lt;p&gt;5.1.2 jsonp实现流程&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;服务端必须支持jsonp，且拥有jsonp跨域接口（前提）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;浏览器客户端声明一个回调函数，其函数名作为参数值，要传递给跨域请求数据的服务器，函数形参为要获取到的返回目标数据&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建一个&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签，把跨域的API数据接口加载到src属性，并且在这个地址向服务器传递该回调函数名&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;服务器会将数据返回到浏览器客户端，此时客户端会调用回调函数，对返回的数据进行处理&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;5.1.3 jsonp代码实战&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php
error_reporting(0);
$callback = $_GET[&#39;callback&#39;];
echo $callback.&amp;quot;({&#39;id&#39;:1,&#39;name&#39;:&#39;missfresh&#39;})&amp;quot;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上即为一个简单的jsonp的服务端接口，假设该接口是一个获取用户的个人信息的接口，那么此时只要请求该接口，每个用户就获取到自己该有的个人信息，&lt;/p&gt;

&lt;p&gt;为了更加符合通常的开发实际情况，一般用户获取个人信息流程：&lt;/p&gt;

&lt;p&gt;登陆-&amp;gt;服务器验证-&amp;gt;session-&amp;gt;通过session判断用户-&amp;gt;个人信息&lt;/p&gt;

&lt;p&gt;5.1.4 JSONP安全威胁&lt;/p&gt;

&lt;p&gt;JSONP威胁点通常有两个：&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;对于输入的callback函数名过滤不严格，导致输入的数据直接输出到前端造成XSS&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;JSONP劫持漏洞，由于对于来源域没有严格限制，因此来源于不安全的域的请求也会被响应&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;5-2-cors跨域&#34;&gt;5.2 CORS跨域&lt;/h3&gt;

&lt;p&gt;5.2.1 CORS跨域原理&lt;/p&gt;

&lt;p&gt;CORS（Cross Origin Resource Sharing），跨域资源共享，为了弥补JSONP等跨域常见技术的缺陷，而提出的安全方便的跨域方案。它允许浏览器想跨域服务器，发出XMLHttpRequest请求，从而克服AJAX只能同源使用的限制。&lt;/p&gt;

&lt;p&gt;CORS需要浏览器和服务器同时支持，相比JSONP更加复杂，但是一般目前的浏览器都是支持的，服务器只需要进行相应配置，其通信过程都是浏览器自动完成，对于开发人员来说，跟写AJAX的代码没有区别，只是会在发送跨域请求时在HTTP请求头中添加一些字段来验证，关键字段如下:&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Access-Control-Allow-Origin：指定哪些域可以访问域资源。例如，如果requester.com想要访问provider.com的资源，那么开发人员可以使用此标头安全地授予requester.com对provider.com资源的访问权限。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Access-Control-Allow-Credentials：指定浏览器是否将使用请求发送cookie。仅当allow-credentials标头设置为true时，才会发送Cookie。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Access-Control-Allow-Methods：指定可以使用哪些HTTP请求方法（GET，PUT，DELETE等）来访问资源。此标头允许开发人员通过在requester.com请求访问provider.com的资源时，指定哪些方法有效来进一步增强安全性。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;5.2.2 CORS实现流程&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;服务器配置支持CORS，默认认可所有域都可以访问&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;浏览器客户端把所在的域填充到Origin发送跨域请求&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;服务器根据资源权限配置，在响应头中添加ccess-Control-Allow-Origin Header，返回结果&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;浏览器比较服务器返回的Access-Control-Allow-Origin Header和请求域的Origin，如果当前域获得授权，则将结果返回给页面&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;5.2.3 CORS安全威胁&lt;/p&gt;

&lt;p&gt;CORS一般最常见的安全威胁就是CORS错误配置导致资源信息泄漏，与JSONP劫持基本上一致。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;漏洞原理&lt;/strong&gt;：通常开发人员使用CORS一般默认允许来自所有域或者由于错误的正则匹配方式造成绕过规定的白名单域&lt;/p&gt;

&lt;p&gt;1、CORS漏洞利用前提&lt;/p&gt;

&lt;p&gt;（1）有用户凭证的&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/6d6b17e73a6842e089d79d62c1aa5fbf.png&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/6d6b17e73a6842e089d79d62c1aa5fbf.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;（2）无用户凭证的&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/c428865faaa74d249acff74d93c6efec.png&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/c428865faaa74d249acff74d93c6efec.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2、实际案例&lt;/p&gt;

&lt;p&gt;以一加官网为例&lt;/p&gt;

&lt;p&gt;登陆后，访问个人信息，然后利用burpsuite抓包，修改origin的域，发现任意域都可以被服务器接受&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/be160ad42d2243dfbf342d2f91d9afbd.png&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/be160ad42d2243dfbf342d2f91d9afbd.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;构造exp：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/086167da01094cb9803fb97f7ff977e7.png&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/086167da01094cb9803fb97f7ff977e7.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;成功利用该exp：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/7d91ca4d2e5d42019002407452139f9d.png&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/7d91ca4d2e5d42019002407452139f9d.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;5-3-postmessage跨域&#34;&gt;5.3 PostMessage跨域&lt;/h3&gt;

&lt;p&gt;5.3.1 PostMessage跨域原理&lt;/p&gt;

&lt;p&gt;PostMeaage是H5新引入的实现跨域窗口之间的通讯，可以安全地实现windows对象之间的跨域通信&lt;/p&gt;

&lt;p&gt;PostMessage主要依靠Window.postMessage方法，该方法有三个参数&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;message：发送到其他窗口的数据&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;targetOrigin：接受数据消息的目标窗口,当该值为星号（* ）表示任意一个域都可以接受消息&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;transfer： 可选项，代表纤细的所有权&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;除了发送之外，必然有一个接受消息的窗口，一般用window.addEventListener(“message”,receiveMessage.false),用以接受消息数据&lt;/p&gt;

&lt;p&gt;5.3.2 PostMessage实现流程&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建一个页面A，定义一个Postmessage方法&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建一个页面B，定义一个window.addEventListener(“message”，function）方法接受来源于Postmessage方法的消息&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;页面A使用Iframe标签包含页面B，触发Postmessage方法即可&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/bcdd2b37ad704ae2ad5b457c5e70c3c7.jpg&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/bcdd2b37ad704ae2ad5b457c5e70c3c7.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.3.3 PostMessage安全威胁&lt;/p&gt;

&lt;p&gt;PostMessage跨越一般威胁点在于对于目标域限制不严格导致的，大多数开发人员由于对于postmessage防范中targetOrigin参数默认为* ，因此只要包含了该方法页面，构造利用代码，就能够获取到敏感信息。&lt;/p&gt;

&lt;p&gt;1、漏洞利用前提&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;页面存在点击劫持&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;postmessage函数中的targetOrigin默认为* 或者targetOrigi对应的域不安全&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;2、实际案例&lt;/p&gt;

&lt;p&gt;（1）构造xss&lt;/p&gt;

&lt;p&gt;可以看到构造恶意xss，发送给目标域，就可以获取到目标域的cookie&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/e36925bbcaed47bd9d0e0ff04c131511.png&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/e36925bbcaed47bd9d0e0ff04c131511.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;（2）窗口劫持&lt;/p&gt;

&lt;p&gt;窗口劫持则主要针对发送消息的域，劫持该消息&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/1567d57dda4b495793d81a7388163b75.jpeg&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/1567d57dda4b495793d81a7388163b75.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/c3fee14734e142578b25db78253940e7.jpeg&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://sec-soc-1255613256.cos.ap-beijing.myqcloud.com/image/c3fee14734e142578b25db78253940e7.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;六-跨域安全场景&#34;&gt;六、跨域安全场景&lt;/h2&gt;

&lt;p&gt;业务场景跨域场景主要有以下两个场景&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;共享个人信息数据&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;共享cookie数据&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;6-1-共享cookie数据&#34;&gt;6.1 共享cookie数据&lt;/h3&gt;

&lt;p&gt;目前常见的一种形式，就是统一登陆，所有的大型企业，基本上都采用这种方式，登陆验证后会在所有的该企业其他同三级域中授权，因此一旦某个域出现安全威胁后，就可能窃取到用户的cookie信息，就可以利用该用户的cookie信息伪装用户操作&lt;/p&gt;

&lt;h3 id=&#34;6-2-共享个人信息数据&#34;&gt;6.2 共享个人信息数据&lt;/h3&gt;

&lt;p&gt;有些时候，可能不存在类似xss这类漏洞，直接获取到用户的cookie信息，但是为了数据在资产域中交换，常常利用jsonp、cors技术，但是会存在配置错误就导致，默认所有域可访问、正则被绕过，引入的某个JS资源该服务器不安全等因素，导致数据被劫持&lt;/p&gt;

&lt;h2 id=&#34;七-跨域安全方案&#34;&gt;七、跨域安全方案&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;对于跨域的安全域，要严格控制信任域，禁止配置默认所有域的情况，对于限制的正则表达式要严格测试通过&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;对于引入的JS等执行脚本，需要保证来源的安全性，避免来源服务器本身的不安全威胁&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;对于边缘业务子域，要控制其可信度，避免从边缘业务的漏洞影响核心业务&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;对于非归属业务，禁止子域分配给其他归属，避免第三方不遵守安全，存在漏洞风险，造成对归属业务的影响&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>yyc</title>
      <link>https://caxavault.online/about/</link>
      <pubDate>Wed, 14 Aug 2019 10:28:04 +0800</pubDate>
      
      <guid>https://caxavault.online/about/</guid>
      <description>&lt;p&gt;&lt;center style=&#34;font-family:楷体; font-size: 24px;&#34;&gt;
&lt;p&gt;天地玄黄，宇宙洪荒。&lt;/p&gt;
&lt;p&gt;日月盈昃，辰宿列张。&lt;/p&gt;
&lt;p&gt;寒来暑往，秋收冬藏。&lt;/p&gt;
&lt;p&gt;闰余成岁，律吕调阳。&lt;/p&gt;
&lt;p&gt;云腾致雨，露结为霜。&lt;/p&gt;
&lt;p&gt;金生丽水，玉出昆冈。&lt;/p&gt;
&lt;p&gt;剑号巨阙，珠称夜光。&lt;/p&gt;
&lt;p&gt;果珍李柰，菜重芥姜。&lt;/p&gt;
&lt;p&gt;海咸河淡，鳞潜羽翔。&lt;/p&gt;
&lt;p&gt;龙师火帝，鸟官人皇。&lt;/p&gt;
&lt;p&gt;始制文字，乃服衣裳。&lt;/p&gt;
&lt;p&gt;推位让国，有虞陶唐。&lt;/p&gt;
&lt;p&gt;吊民伐罪，周发殷汤。&lt;/p&gt;
&lt;p&gt;坐朝问道，垂拱平章。&lt;/p&gt;
&lt;p&gt;爱育黎首，臣伏戎羌。&lt;/p&gt;
&lt;p&gt;遐迩一体，率宾归王。&lt;/p&gt;
&lt;p&gt;鸣凤在竹，白驹食场。&lt;/p&gt;
&lt;p&gt;化被草木，赖及万方。&lt;/p&gt;
&lt;p&gt;盖此身发，四大五常。&lt;/p&gt;
&lt;p&gt;恭惟鞠养，岂敢毁伤。&lt;/p&gt;
&lt;p&gt;女慕贞洁，男效才良。&lt;/p&gt;
&lt;p&gt;知过必改，得能莫忘。&lt;/p&gt;
&lt;p&gt;罔谈彼短，靡恃己长。&lt;/p&gt;
&lt;p&gt;信使可覆，器欲难量。&lt;/p&gt;
&lt;p&gt;墨悲丝染，诗赞羔羊。&lt;/p&gt;
&lt;p&gt;景行维贤，克念作圣。&lt;/p&gt;
&lt;p&gt;德建名立，形端表正。&lt;/p&gt;
&lt;p&gt;空谷传声，虚堂习听。&lt;/p&gt;
&lt;p&gt;祸因恶积，福缘善庆。&lt;/p&gt;
&lt;p&gt;尺璧非宝，寸阴是竞。&lt;/p&gt;
&lt;p&gt;资父事君，曰严与敬。&lt;/p&gt;
&lt;p&gt;孝当竭力，忠则尽命。&lt;/p&gt;
&lt;p&gt;临深履薄，夙兴温凊。&lt;/p&gt;
&lt;p&gt;似兰斯馨，如松之盛。&lt;/p&gt;
&lt;p&gt;川流不息，渊澄取映。&lt;/p&gt;
&lt;p&gt;容止若思，言辞安定。&lt;/p&gt;
&lt;p&gt;笃初诚美，慎终宜令。&lt;/p&gt;
&lt;p&gt;荣业所基，籍甚无竟。&lt;/p&gt;
&lt;p&gt;学优登仕，摄职从政。&lt;/p&gt;
&lt;p&gt;存以甘棠，去而益咏。&lt;/p&gt;
&lt;p&gt;乐殊贵贱，礼别尊卑。&lt;/p&gt;
&lt;p&gt;上和下睦，夫唱妇随。&lt;/p&gt;
&lt;p&gt;外受傅训，入奉母仪。&lt;/p&gt;
&lt;p&gt;诸姑伯叔，犹子比儿。&lt;/p&gt;
&lt;p&gt;孔怀兄弟，同气连枝。&lt;/p&gt;
&lt;p&gt;交友投分，切磨箴规。&lt;/p&gt;
&lt;p&gt;仁慈隐恻，造次弗离。&lt;/p&gt;
&lt;p&gt;节义廉退，颠沛匪亏。&lt;/p&gt;
&lt;p&gt;性静情逸，心动神疲。&lt;/p&gt;
&lt;p&gt;守真志满，逐物意移。&lt;/p&gt;
&lt;p&gt;坚持雅操，好爵自縻。&lt;/p&gt;
&lt;p&gt;都邑华夏，东西二京。&lt;/p&gt;
&lt;p&gt;背邙面洛，浮渭据泾。&lt;/p&gt;
&lt;p&gt;宫殿盘郁，楼观飞惊。&lt;/p&gt;
&lt;p&gt;图写禽兽，画彩仙灵。&lt;/p&gt;
&lt;p&gt;丙舍旁启，甲帐对楹。&lt;/p&gt;
&lt;p&gt;肆筵设席，鼓瑟吹笙。&lt;/p&gt;
&lt;p&gt;升阶纳陛，弁转疑星。&lt;/p&gt;
&lt;p&gt;右通广内，左达承明。&lt;/p&gt;
&lt;p&gt;既集坟典，亦聚群英。&lt;/p&gt;
&lt;p&gt;杜稿钟隶，漆书壁经。&lt;/p&gt;
&lt;p&gt;府罗将相，路侠槐卿。&lt;/p&gt;
&lt;p&gt;户封八县，家给千兵。&lt;/p&gt;
&lt;p&gt;高冠陪辇，驱毂振缨。&lt;/p&gt;
&lt;p&gt;世禄侈富，车驾肥轻。&lt;/p&gt;
&lt;p&gt;策功茂实，勒碑刻铭。&lt;/p&gt;
&lt;p&gt;盘溪伊尹，佐时阿衡。&lt;/p&gt;
&lt;p&gt;奄宅曲阜，微旦孰营。&lt;/p&gt;
&lt;p&gt;桓公匡合，济弱扶倾。&lt;/p&gt;
&lt;p&gt;绮回汉惠，说感武丁。&lt;/p&gt;
&lt;p&gt;俊义密勿，多士实宁。&lt;/p&gt;
&lt;p&gt;晋楚更霸，赵魏困横。&lt;/p&gt;
&lt;p&gt;假途灭虢，践土会盟。&lt;/p&gt;
&lt;p&gt;何遵约法，韩弊烦刑。&lt;/p&gt;
&lt;p&gt;起翦颇牧，用军最精。&lt;/p&gt;
&lt;p&gt;宣威沙漠，驰誉丹青。&lt;/p&gt;
&lt;p&gt;九州禹迹，百郡秦并。&lt;/p&gt;
&lt;p&gt;岳宗泰岱，禅主云亭。&lt;/p&gt;
&lt;p&gt;雁门紫塞，鸡田赤诚。&lt;/p&gt;
&lt;p&gt;昆池碣石，钜野洞庭。&lt;/p&gt;
&lt;p&gt;旷远绵邈，岩岫杳冥。&lt;/p&gt;
&lt;p&gt;治本于农，务兹稼穑。&lt;/p&gt;
&lt;p&gt;俶载南亩，我艺黍稷。&lt;/p&gt;
&lt;p&gt;税熟贡新，劝赏黜陟。&lt;/p&gt;
&lt;p&gt;孟轲敦素，史鱼秉直。&lt;/p&gt;
&lt;p&gt;庶几中庸，劳谦谨敕。&lt;/p&gt;
&lt;p&gt;聆音察理，鉴貌辨色。&lt;/p&gt;
&lt;p&gt;贻厥嘉猷，勉其祗植。&lt;/p&gt;
&lt;p&gt;省躬讥诫，宠增抗极。&lt;/p&gt;
&lt;p&gt;殆辱近耻，林皋幸即。&lt;/p&gt;
&lt;p&gt;两疏见机，解组谁逼。&lt;/p&gt;
&lt;p&gt;索居闲处，沉默寂寥。&lt;/p&gt;
&lt;p&gt;求古寻论，散虑逍遥。&lt;/p&gt;
&lt;p&gt;欣奏累遣，戚谢欢招。&lt;/p&gt;
&lt;p&gt;渠荷的历，园莽抽条。&lt;/p&gt;
&lt;p&gt;枇杷晚翠，梧桐蚤凋。&lt;/p&gt;
&lt;p&gt;陈根委翳，落叶飘摇。&lt;/p&gt;
&lt;p&gt;游鹍独运，凌摩绛霄。&lt;/p&gt;
&lt;p&gt;耽读玩市，寓目囊箱。&lt;/p&gt;
&lt;p&gt;易輶攸畏，属耳垣墙。&lt;/p&gt;
&lt;p&gt;具膳餐饭，适口充肠。&lt;/p&gt;
&lt;p&gt;饱饫烹宰，饥厌糟糠。&lt;/p&gt;
&lt;p&gt;亲戚故旧，老少异粮。&lt;/p&gt;
&lt;p&gt;妾御绩纺，侍巾帷房。&lt;/p&gt;
&lt;p&gt;纨扇圆洁，银烛炜煌。&lt;/p&gt;
&lt;p&gt;昼眠夕寐，蓝笋象床。&lt;/p&gt;
&lt;p&gt;弦歌酒宴，接杯举觞。&lt;/p&gt;
&lt;p&gt;矫手顿足，悦豫且康。&lt;/p&gt;
&lt;p&gt;嫡后嗣续，祭祀烝尝。&lt;/p&gt;
&lt;p&gt;稽颡再拜，悚惧恐惶。&lt;/p&gt;
&lt;p&gt;笺牒简要，顾答审详。&lt;/p&gt;
&lt;p&gt;骸垢想浴，执热愿凉。&lt;/p&gt;
&lt;p&gt;驴骡犊特，骇跃超骧。&lt;/p&gt;
&lt;p&gt;诛斩贼盗，捕获叛亡。&lt;/p&gt;
&lt;p&gt;布射僚丸，嵇琴阮箫。&lt;/p&gt;
&lt;p&gt;恬笔伦纸，钧巧任钓。&lt;/p&gt;
&lt;p&gt;释纷利俗，并皆佳妙。&lt;/p&gt;
&lt;p&gt;毛施淑姿，工颦妍笑。&lt;/p&gt;
&lt;p&gt;年矢每催，曦晖朗曜。&lt;/p&gt;
&lt;p&gt;璇玑悬斡，晦魄环照。&lt;/p&gt;
&lt;p&gt;指薪修祜，永绥吉劭。&lt;/p&gt;
&lt;p&gt;矩步引领，俯仰廊庙。&lt;/p&gt;
&lt;p&gt;束带矜庄，徘徊瞻眺。&lt;/p&gt;
&lt;p&gt;孤陋寡闻，愚蒙等诮。&lt;/p&gt;
&lt;p&gt;谓语助者，焉哉乎也。&lt;/p&gt;
&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>